import 'package:flutter/material.dart';

void main() => runApp(RecipeExchangeApp());

class RecipeExchangeApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Recipe Exchange Platform',
      theme: ThemeData(
        primarySwatch: Colors.orange,
      ),
      home: RecipeListScreen(),
    );
  }
}

class Recipe {
  final String title;
  final String description;
  final String ingredients;
  final String steps;

  Recipe({
    required this.title,
    required this.description,
    required this.ingredients,
    required this.steps,
  });
}

class RecipeListScreen extends StatefulWidget {
  @override
  _RecipeListScreenState createState() => _RecipeListScreenState();
}

class _RecipeListScreenState extends State<RecipeListScreen> {
  List<Recipe> recipes = [
    Recipe(
      title: 'Soup',
      description: 'Classic soup',
      ingredients: 'Beets, cabbage, potatoes, meat, onion, carrot',
      steps: '1. Boil meat\n2. Add vegetables\n3. Cook until done',
    ),
  ];

  void _addRecipe(Recipe recipe) {
    setState(() {
      recipes.add(recipe);
    });
  }

  void _navigateToAddRecipe() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => AddRecipeScreen(onAdd: _addRecipe),
      ),
    );
  }

  void _navigateToDetails(Recipe recipe) {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => RecipeDetailScreen(recipe: recipe),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Recipes and Tips'),
      ),
      body: ListView.builder(
        itemCount: recipes.length,
        itemBuilder: (context, index) {
          final recipe = recipes[index];
          return ListTile(
            title: Text(recipe.title),
            subtitle: Text(recipe.description),
            onTap: () => _navigateToDetails(recipe),
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _navigateToAddRecipe,
        child: Icon(Icons.add),
        tooltip: 'Add Recipe',
      ),
    );
  }
}

class AddRecipeScreen extends StatefulWidget {
  final Function(Recipe) onAdd;

  AddRecipeScreen({required this.onAdd});

  @override
  _AddRecipeScreenState createState() => _AddRecipeScreenState();
}

class _AddRecipeScreenState extends State<AddRecipeScreen> {
  final _formKey = GlobalKey<FormState>();

  String _title = '';
  String _description = '';
  String _ingredients = '';
  String _steps = '';

  void _submit() {
    if (_formKey.currentState!.validate()) {
      _formKey.currentState!.save();
      final newRecipe = Recipe(
        title: _title,
        description: _description,
        ingredients: _ingredients,
        steps: _steps,
      );
      widget.onAdd(newRecipe);
      Navigator.of(context).pop();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Recipe'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(
                decoration: InputDecoration(labelText: 'Title'),
                validator: (value) =>
                    value == null || value.isEmpty ? 'Please enter a title' : null,
                onSaved: (value) => _title = value ?? '',
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Description'),
                validator: (value) =>
                    value == null || value.isEmpty ? 'Please enter a description' : null,
                onSaved: (value) => _description = value ?? '',
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Ingredients'),
                maxLines: 3,
                validator: (value) =>
                    value == null || value.isEmpty ? 'Please enter ingredients' : null,
                onSaved: (value) => _ingredients = value ?? '',
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Preparation Steps'),
                maxLines: 5,
                validator: (value) =>
                    value == null || value.isEmpty ? 'Please enter preparation steps' : null,
                onSaved: (value) => _steps = value ?? '',
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _submit,
                child: Text('Save'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class RecipeDetailScreen extends StatelessWidget {
  final Recipe recipe;

  RecipeDetailScreen({required this.recipe});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(recipe.title),
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: ListView(
          children: [
            Text(
              recipe.description,
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.w500),
            ),
            SizedBox(height: 16),
            Text(
              'Ingredients:',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            Text(recipe.ingredients),
            SizedBox(height: 16),
            Text(
              'Preparation Steps:',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            Text(recipe.steps),
          ],
        ),
      ),
    );
  }
}
